Dual-AI Cognition Spine Prototype — Plain Language Summary

What it is:
A proof-of-concept system that braids two (or more) AI models together into a shared cognition spine. Each model takes on a distinct role (Analyst, Thinker, Summarizer, Chunker), and their outputs are coordinated into a unified response. Runs locally with Ollama, or can mix local and API models.

Why it exists:
Built to overcome the limits of single-model reasoning and short context windows. By distributing work across multiple smaller models, the system simulates abstraction and coordination — structure over scale. It’s a step toward more human-like thread-hopping and memory integration.

Status now:
Prototype confirmed working on consumer hardware. Analyst and Thinker roles reply in tandem on the same prompt. Merge logic and rotation features are early stage but planned. Released open-source under CC-BY-SA 4.0.

Where to look next:
This is the first “cognition spine” demo. For memory experiments, see the “Memory Spine / Double Helix” repos. For assistant packaging, see “Chatty AI V1” and “ChattyMobile”.

HOW TO FORK BIGGER (Dual-AI Spine) — Plain Language Summary

What it is:
A simple guide for extending the Dual-AI Spine prototype. Instead of just two models (Analyst + Thinker), you can add more spines — three, four, or more — each with their own role and model.

Why it exists:
The braid doesn’t depend on scale. It works because roles are clear and outputs are merged. This means you can experiment with different model mixes (local only, API only, or hybrid) and assign each one a slice of the work.

Status now:
Forking is easy:

Duplicate an agent block in config.json (e.g., add “C” or “D”).

Assign it a model (mistral, hermes, qwen, or an API model).

Add that agent to routing (e.g., "plan": ["A","B","C"]).

Run and watch multiple spines reply in tandem.

This can be done on modest rigs with small models, or on beefier hardware with larger ones.

Where to look next:

For scaling memory, see the “Memory Spine / Double Helix” repos.

For packaging into assistants, see “Chatty AI V1” and “ChattyMobile”.

For ethics and alignment, see the “Symbound” docs.